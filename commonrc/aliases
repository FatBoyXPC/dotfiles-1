# vi: ft=sh

alias bs="mosh bs336 -- bash -cli bs"
alias ls='ls --color=auto'
alias o=xdg-open
alias be="bundle exec"

alias ssh="light_dark_ssh"

# Awesome debug script from https://unix.stackexchange.com/a/231310
# Very useful for finding short lived processes.
alias allprocs='sudo sysdig -p"*%evt.time %proc.pid %proc.ppid %evt.dir %proc.exeline"     "( evt.dir=< and evt.type=execve ) or evt.type=procexit"'

# Rails Reset Test DB
alias rrtdb="bin/rails db:environment:set RAILS_ENV=test && bin/rake db:reset RACK_ENV=test"

alias wcacheckmem="ssh wca 'date && ps -eo rss,comm,pid,args | grep -i unicorn | grep -v grep'"
alias wcadeploy="ssh -A cubing@worldcubeassociation.org worldcubeassociation.org/scripts/deploy.sh pull_latest rebuild_regs rebuild_rails"

function de {
    CONTAINER=$1
    shift
    CMD="docker exec -it --detach-keys='ctrl-^,q' $CONTAINER env TERM=xterm bash"
    if [ "$#" -gt 0 ]; then
        CMD="$CMD -c '$*'"
    fi
    echo $CMD
    eval $CMD
}

# Copied from https://gist.github.com/jfly/7b94cba17c04d344d62a7bea916bb55a
function start_screen {
    NAME=$1
    shift
    screen -dmS "$NAME" -s bash # start screen

    while test $# -gt 0
    do
        TITLE="$1"
        shift
        CMD="$1"$'\n'
        shift
        screen -S "$NAME" -X title "$TITLE" # set title of window
        screen -S "$NAME" -X stuff "$CMD" # run command in window
        screen -S "$NAME" -X screen # add new window
    done
}

function cgl {
    hub browse -u -- commit/$1 | clipit
}

function clcl {
    cgl `git rev-parse HEAD`
}

function gnb {
    if [ -z "$1" ]; then
        echo "Please specify a branch name to create." >> /dev/stderr
    else
        stashed=$(git stash)

        git fetch upstream
        git checkout --no-track -b $1 upstream/master
        git push -u origin $1

        if [ "$stashed" != "No local changes to save" ]; then
            git stash apply
            echo "I just did a git stash apply, if things worked well, don't forget to do a `git stash drop`"
        fi
    fi
}

function remote_to_gh_url {
    # Convert git@github.com:jfly/tnoodle.git to jfly/tnoodle
    1=${1#git@github.com:}
    1=${1%.git}

    # Convert https://github.com/thewca/tnoodle.git to thewca/tnoodle
    1=${1#https://github.com/}

    echo $1
}

function gnpr {
    upstream=$(remote_to_gh_url $(git remote get-url upstream))
    origin=$(remote_to_gh_url $(git remote get-url origin))
    origin_repo=${origin%/*}
    current_branch=$(git rev-parse --abbrev-ref HEAD)
    o "https://github.com/${upstream}/compare/master...${origin_repo}:${current_branch}?expand=1"
}

# At the bottom because it screws up syntax highlighting =(
alias wcacheckgbot="ssh wca 'bash -c \"tail -f /var/log/nginx/access.log | grep /search.*Googlebot\"'"
