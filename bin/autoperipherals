#!/bin/bash

function main() {
    HDMI_STATUS=$(</sys/class/drm/card0/*HDMI*/status)
    DP1_STATUS=$(</sys/class/drm/card0/card0-DP-1/status)

    if [ "$HDMI_STATUS" == "connected" ]; then
        LAYOUT_NAME=mission-desk
        TRAYER_HEIGHT=19
        XFT_DPI=$((1024*96))
    elif [ "$DP1_STATUS" == "connected" ]; then
        LAYOUT_NAME=honor-desk
        TRAYER_HEIGHT=19
        XFT_DPI=$((1024*96))
    else
        LAYOUT_NAME=mobile
        # Temporarily trying out a a really tiny tray on mobile... TRAYER_HEIGHT=25
        TRAYER_HEIGHT=19
        XFT_DPI=$((1024*133))
    fi

    size_tray $TRAYER_HEIGHT

    echo "Xft/DPI $XFT_DPI" > ~/.xsettingsd
    killall -HUP xsettingsd

    # notify-send blocks until something receives the message. When booting,
    # we haven't started dunst yet, so we need to run notify-send in the background.
    notify-send "Detected environment $LAYOUT_NAME" &

    $LAYOUT_NAME.sh

    # Note, we intentionally run fixkeys last, because xmodmap blocks if you're holding any keys down.
    # See: https://forums.fedoraforum.org/showthread.php?296298-xmodmap-please-release-the-following-keys-within-2-seconds
    fixinputs
}

function size_tray() {
    height=$1
    # TODO - the following doesn't actually resize the tray. if we want to
    #        resize xmobar, i think we need to:
    #         1. edit our xmobarrc
    #         2. run `xmonad --restart`
    # We'd just kill and restart trayer everytime to resize it, but this also causes trayer to stay
    # on top of windows when we turn off struts.
    #killall -q trayer
    if ! pgrep trayer &> /dev/null; then
        trayer --edge top --align right --SetDockType true --SetPartialStrut true --expand true --width 10 --height $height --transparent true --alpha 0 --tint 0 &
    fi
}

# There's no way it's good to be running this command simultaneously.
if pgrep autoperipherals | grep -v $$; then
    echo "I see an autoperipherals command already running, let's not step on its toes."
    exit 1
fi
main
