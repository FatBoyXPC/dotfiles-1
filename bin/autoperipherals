#!/bin/bash

function main() {
    HDMI1_STATUS=$(</sys/class/drm/card0/card0-HDMI-A-1/status)
    DP1_STATUS=$(</sys/class/drm/card0/card0-DP-1/status)

    if [ "$HDMI1_STATUS" == "connected" ]; then
        LAYOUT_NAME=hdmi
        TRAYER_HEIGHT=19
        XFT_DPI=$((1024*96))

        xrandr --output HDMI1 --auto --pos 0x0 --rotate normal --output VIRTUAL1 --off --output DP1 --off --output eDP1 --off --output DP2 --off

        # Switch to HDMI audio.
        # TODO - for some reason, only one of these profiles is available, but it seems to change randomly.
        pactl set-card-profile alsa_card.pci-0000_00_1f.3 output:hdmi-stereo+input:analog-stereo
        pactl set-card-profile alsa_card.pci-0000_00_1f.3 output:hdmi-stereo+input:stereo-fallback
    elif [ "$DP1_STATUS" == "connected" ]; then
        LAYOUT_NAME=dp1
        TRAYER_HEIGHT=19
        XFT_DPI=$((1024*96))

        xrandr --output DP1 --auto --pos 0x0 --rotate normal --output VIRTUAL1 --off --output HDMI1 --off --output eDP1 --off --output DP2 --off
        # Switch to HDMI audio.
        # TODO - for some reason, only one of these profiles is available, but it seems to change randomly.
        pactl set-card-profile alsa_card.pci-0000_00_1f.3 output:hdmi-stereo+input:analog-stereo
        pactl set-card-profile alsa_card.pci-0000_00_1f.3 output:hdmi-stereo+input:stereo-fallback
    else
        LAYOUT_NAME=mobile
        # Temporarily trying out a really tiny tray on mobile... TRAYER_HEIGHT=25
        TRAYER_HEIGHT=19
        XFT_DPI=$((1024*133))

        xrandr --output HDMI1 --off --output VIRTUAL1 --off --output DP1 --off --output eDP1 --primary --mode 2560x1440 --pos 0x0 --rotate normal --output DP2 --off

        # Switch to laptop speakers.
        # TODO - this sometimes fails with "No such entity"
        # Look into why these indices are changing, or use `pactl list cards` to find the card?
        pactl set-card-profile 1 output:analog-stereo+input:analog-stereo
    fi

    setbg

    size_tray $TRAYER_HEIGHT

    # Change DPI and notify everyone via XSETTINGS.
    # See https://utcc.utoronto.ca/~cks/space/blog/linux/XSettingsNotes?showcomments
    # and https://github.com/GNOME/gtk/blob/1a1373779f87ce928a45a9371512d207445f615f/gdk/x11/xsettings-client.c#L399
    echo "Xft/DPI $XFT_DPI" > ~/.xsettingsd
    killall -HUP xsettingsd

    # notify-send blocks until something receives the message. When booting,
    # we haven't started dunst yet, so we need to run notify-send in the background.
    notify-send "Detected environment $LAYOUT_NAME" &

    # Note, we intentionally run fixkeys last, because xmodmap blocks if you're holding any keys down.
    # See: https://forums.fedoraforum.org/showthread.php?296298-xmodmap-please-release-the-following-keys-within-2-seconds
    fixinputs
}

function size_tray() {
    height=$1
    # TODO - the following doesn't actually resize the tray. if we want to
    #        resize xmobar, i think we need to:
    #         1. edit our xmobarrc
    #         2. run `xmonad --restart`
    # We'd just kill and restart trayer everytime to resize it, but this also causes trayer to stay
    # on top of windows when we turn off struts.
    #killall -q trayer
    if ! pgrep trayer &> /dev/null; then
        trayer --edge top --align right --SetDockType true --SetPartialStrut true --expand true --widthtype request --height $trayer_height --transparent true --alpha 0 --tint 0 &
    fi
}

# There's no way it's good to be running this command simultaneously.
if pgrep autoperipherals | grep -v $$; then
    echo "I see an autoperipherals command already running, let's not step on its toes."
    exit 1
fi
main
